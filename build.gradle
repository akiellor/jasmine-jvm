apply plugin: 'release'

def isReleaseVersion() {
    return !version.endsWith("SNAPSHOT")
}

buildscript {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/groups/public"}
        maven {
            name 'Gradle Shadow'
            url 'http://dl.bintray.com/content/johnrengelman/gradle-plugins'
        }
    }
    dependencies {
        classpath 'org.gradle.plugins:shadow:0.7.4'
        classpath 'com.github.townsfolk:gradle-release:1.2'
    }
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'shadow'
    apply plugin: 'maven'
    apply plugin: 'signing'

    repositories {
      maven {
          url "$rootDir/repository"
      }
      mavenCentral()
    }

    group = 'com.github.akiellor.jasmine'
}

subprojects {
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    release {
        failOnSnapshotDependencies = false
    }

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }

    signing {
        required { isReleaseVersion() && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment ->
                    signing.signPom(deployment)
                }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    if(project.hasProperty("sonatypeUsername") && project.hasProperty("sonatypePassword")){
                        authentication(userName: sonatypeUsername, password: sonatypePassword)
                    }
                }

                pom.project {
                    name "jasmine-$project.name"
                    packaging 'jar'
                    description 'A jasmine runner using the dynjs javascript runtime'
                    url 'http://github.com/akiellor/jasmine-jvm'

                    scm {
                        url 'scm:git@github.com:akiellor/jasmine-jvm.git'
                        connection 'scm:git@github.com:akiellor/jasmine-jvm.git'
                        developerConnection 'scm:git@github.com:akiellor/jasmine-jvm.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'akiellor'
                            name 'Andrew Kiellor'
                        }
                    }
                }
            }
        }
    }
}

createReleaseTag.dependsOn(subprojects.collect { it.name + ":uploadArchives" })
