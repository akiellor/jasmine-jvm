apply plugin: 'java'
apply plugin: 'idea'

repositories {
  flatDir {
    def gradleIdeaProps = new Properties()
    gradleIdeaProps.load(new FileInputStream("$projectDir/gradle-idea.properties"))

    dirs gradleIdeaProps.get("installation.dir")
  }

  mavenCentral()
  maven { url "https://repository-projectodd.forge.cloudbees.com/upstream" }
}

configurations{
    provided
}

dependencies{
    compile 'org.dynjs:dynjs:0.1.2-SNAPSHOT'

    provided name: 'idea'
    provided name: 'util'
    provided name: 'openapi'
    provided name: 'annotations'
}

sourceSets.main.compileClasspath += configurations.provided

idea {
    module {
        iml {
            withXml {
                def module = it.asNode()

                module.attributes().putAt('type', 'PLUGIN_MODULE')
                module.attributes().putAt('version', '4')

                def devkit = module.breadthFirst().find { it.attributes()["name"] == 'DevKit.ModuleBuildProperties'}
                if (devkit == null) {
                    devkit = module.appendNode('component', ['name': 'DevKit.ModuleBuildProperties'])
                }
                devkit.attributes().putAt('url', 'file://$MODULE_DIR$/src/main/resources/META-INF/plugin.xml')

                def moduleRoot = module.breadthFirst().find { it.attributes()["name"] == 'NewModuleRootManager'}
                if (moduleRoot == null) {
                    moduleRoot = module.appendNode('component', ['name': 'NewModuleRootManager'])
                }
                moduleRoot.attributes().putAt('inherit-compiler-output', true)


                def excludeOutput = moduleRoot.breadthFirst().find { it.name() == 'exclude-output'}
                if (excludeOutput == null) {
                    moduleRoot.appendNode('exclude-output')
                }

                def content = moduleRoot.breadthFirst().find { it.name() == 'content'}
                if (content == null) {
                    content = moduleRoot.appendNode('content');
                }
                content.attributes().putAt('url', 'file://$MODULE_DIR$')

                def orderEntry = moduleRoot.breadthFirst().find { it.name() == 'orderEntry'}
                if (orderEntry == null) {
                    orderEntry = moduleRoot.appendNode('orderEntry');
                }
                orderEntry.attributes().putAt('type', 'jdk')
                orderEntry.attributes().putAt('jdkName', 'IDEA IC-129.161')
                orderEntry.attributes().putAt('jdkType', 'IDEA JDK')
            }
        }
    }
}